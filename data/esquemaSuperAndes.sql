--- Sentencias SQL para la creacion del esquema del proyecto AforAndes
--- Las tablas tienen prefijo  para facilitar su acceso desde SQL Developer

-- USO
-- Copie el contenido de este archivo en una pestana SQL de SQL Developer
-- Ejecutelo como un script - Utilice el boton correspondiente de la pestana utilizada

-- Creacion del secuenciador
CREATE SEQUENCE SUPERANDES_SEQUENCE;

-- Creacion de la tabla TIPO_USUARIO y especificacion de sus restricciones
CREATE TABLE TIPO_USUARIO
   (ID NUMBER, 
	NOMBRE VARCHAR2(32 BYTE), 
	CONSTRAINT TIPO_USUARIO_PK PRIMARY KEY (ID));

-- Creacion de la tabla PROVEEDOR y especificacion de sus restricciones
CREATE TABLE PROVEEDOR
   (NIT VARCHAR2(24 BYTE), 
	NOMBRE VARCHAR2(255 BYTE), 
	CONSTRAINT PROVEEDOR_PK PRIMARY KEY (NIT));


-- Creacion de la tabla PRODUCTO y especificacion de sus restricciones
CREATE TABLE PRODUCTO
   (CODIGO_BARRAS VARCHAR2(24 BYTE), 
	NOMBRE VARCHAR2(32 BYTE) NOT NULL, 
	MARCA VARCHAR2(32 BYTE) NOT NULL, 
	UNIDAD_MEDIDA VARCHAR2(4 BYTE) NOT NULL, 
    PRESENTACION VARCHAR2(255 BYTE) NOT NULL,
    CANTIDAD_PRESENTACION NUMBER NOT NULL, 
    VOLUMEN_EMPAQUE NUMBER NOT NULL, 
    PESO_EMPAQUE NUMBER NOT NULL, 
    TIPO VARCHAR2(32 BYTE), 
    CATEGORIA VARCHAR2(32 BYTE) NOT NULL, 
    FECHA_VENCIMIENTO DATE DEFAULT NULL,
	CONSTRAINT PRODUCTO_PK PRIMARY KEY (CODIGO_BARRAS));
	
ALTER TABLE PRODUCTO
ADD CONSTRAINT CK_PROD_UNIDAD_MEDIDA
    CHECK (UNIDAD_MEDIDA IN('gr','ml'))
ADD CONSTRAINT CK_PROD_CANTIDAD_PRESENTACION
    CHECK (CANTIDAD_PRESENTACION>0)
ADD CONSTRAINT CK_PROD_VOLUMEN_EMPAQUE
    CHECK (VOLUMEN_EMPAQUE>0)
ADD CONSTRAINT CK_PROD_PESO_EMPAQUE
    CHECK (PESO_EMPAQUE>0)
ADD CONSTRAINT CK_PROD_TIPO
    CHECK (TIPO IN('Botana','Carnes','Frutas congeladas','Helados'))
ADD CONSTRAINT CK_PROD_CATEGORIA
    CHECK (CATEGORIA IN('Aseo','Abarrotes','Prendas vestir','Muebles','Herramientas','Electrodomesticos'));

-- Creacion de la tabla SUCURSAL y especificacion de sus restricciones
CREATE TABLE SUCURSAL
   (ID NUMBER, 
	NOMBRE VARCHAR2(32 BYTE) NOT NULL, 
	TELEFONO VARCHAR2(32 BYTE), 
	DIRECCION VARCHAR2(32 BYTE) NOT NULL, 
	CIUDAD VARCHAR2(32 BYTE) NOT NULL, 
    
	CONSTRAINT SUCURSAL_PK PRIMARY KEY (ID));


-- Creacion de la tabla USUARIO y especificacion de sus restricciones
CREATE TABLE USUARIO
   (CODIGO_USUARIO NUMBER, 
	DOCUMENTO VARCHAR2(32 BYTE) NOT NULL, 
	TIPO_DOCUMENTO VARCHAR2(8 BYTE) NOT NULL, 
	NOMBRE VARCHAR2(255 BYTE) NOT NULL, 
    EMAIL VARCHAR2(255 BYTE) NOT NULL,
    CONTRASENA VARCHAR2(255 BYTE) NOT NULL,
    ID_TIPO NUMBER NOT NULL,
	CONSTRAINT USUARIO_PK PRIMARY KEY (CODIGO_USUARIO));

ALTER TABLE USUARIO
ADD CONSTRAINT FK_U_ID_TIPO
    FOREIGN KEY (ID_TIPO)
    REFERENCES TIPO_USUARIO(ID)
ENABLE;

ALTER TABLE USUARIO
	ADD CONSTRAINT CK_USUARIO_TIPODOC
	CHECK (TIPO_DOCUMENTO IN ('CC', 'CE', 'NIT','TI'));

ALTER TABLE USUARIO 
ADD CONSTRAINT ND_U_TIPO_DOCUMENTO 
    UNIQUE (TIPO_DOCUMENTO);

-- Creacion de la tabla PROMOCION y especificacion de sus restricciones
CREATE TABLE PROMOCION
(
  ID NUMBER,
  ID_SUCURSAL NUMBER NOT NULL,
  INICIO DATE NOT NULL,
  DURACION DATE NOT NULL,
  FIN DATE DEFAULT NULL,
  VENTAS_MAXIMAS NUMBER NOT NULL,
  VENTAS_ACTUALES NUMBER NOT NULL,
  PRECIO_PAQUETE NUMBER DEFAULT NULL,
  ID_PRODUCTO VARCHAR2(24 BYTE) DEFAULT NULL, 
  DESCRIPCION VARCHAR2(255 BYTE),
  CONSTRAINT PROMOCION_PK PRIMARY KEY (ID));

ALTER TABLE PROMOCION
ADD CONSTRAINT FK_PROM_ID_PRODUCTO
    FOREIGN KEY (ID_PRODUCTO)
    REFERENCES PRODUCTO(CODIGO_BARRAS)
ADD CONSTRAINT CK_INICIO_MAYOR_FIN
    CHECK (FIN>INICIO)
ENABLE;

ALTER TABLE PROMOCION
ADD CONSTRAINT FK_PROM_ID_SUCURSAL
    FOREIGN KEY (ID_SUCURSAL)
    REFERENCES SUCURSAL(ID)
ENABLE;

ALTER TABLE PROMOCION
ADD CONSTRAINT CK_PROM_VENTAS_MAXIMAS
    CHECK (VENTAS_MAXIMAS>0)
ADD CONSTRAINT CK_PROM_VENTAS_ACTUALES
    CHECK (VENTAS_ACTUALES>0)
ADD CONSTRAINT CK_PROM_PRECIO_PAQUETE
    CHECK ((PRECIO_PAQUETE>0) OR PRECIO_PAQUETE IS NULL)    
ENABLE;

ALTER TABLE PROMOCION 
MODIFY VENTAS_ACTUALES 
    DEFAULT 0;


-- Creacion de la tabla PRODUCTO_PROVEEDOR y especificacion de sus restricciones
CREATE TABLE PRODUCTO_PROVEEDOR 
   (ID_PROVEEDOR VARCHAR2(24 BYTE),
    ID_PRODUCTO VARCHAR2(24 BYTE),
    DISPONIBILIDAD NUMBER NOT NULL,
    PRECIO_VENTA NUMBER NOT NULL,
    CALIFICACION_CALIDAD NUMBER(2, 1) DEFAULT NULL,
	CONSTRAINT PRODUCTO_PROVEEDOR_PK PRIMARY KEY (ID_PRODUCTO, ID_PROVEEDOR));
	
ALTER TABLE PRODUCTO_PROVEEDOR
ADD CONSTRAINT FK_PP_ID_PROVEEDOR
    FOREIGN KEY (ID_PROVEEDOR)
    REFERENCES PROVEEDOR(NIT)
ENABLE;

ALTER TABLE PRODUCTO_PROVEEDOR
ADD CONSTRAINT FK_PP_ID_PRODUCTO
    FOREIGN KEY (ID_PRODUCTO)
    REFERENCES PRODUCTO(CODIGO_BARRAS)
ENABLE;

ALTER TABLE PRODUCTO_PROVEEDOR
ADD CONSTRAINT CK_PP_DISPONIBILIDAD
	CHECK (DISPONIBILIDAD >= 0)
ADD CONSTRAINT CK_PP_PRECIO_VENTA
	CHECK (PRECIO_VENTA >= 0)
ADD CONSTRAINT CK_PP_CALIFICACION_CALIDAD
	CHECK ((CALIFICACION_CALIDAD >= 0.0 AND CALIFICACION_CALIDAD <= 5.0) OR CALIFICACION_CALIDAD IS NULL)
ENABLE;

-- Creacion de la tabla PRODUCTO_SUCURSAL y especificacion de sus restricciones
CREATE TABLE PRODUCTO_SUCURSAL
   (ID_PRODUCTO VARCHAR2(24 BYTE),
    ID_SUCURSAL NUMBER,
    NIVEL_REORDEN NUMBER NOT NULL,
    PRECIO_VENTA NUMBER NOT NULL,
    PRECIO_UNIDAD_MEDIDA NUMBER NOT NULL,
	CONSTRAINT PRODUCTO_SUCURSAL_PK PRIMARY KEY (ID_PRODUCTO, ID_SUCURSAL));

ALTER TABLE PRODUCTO_SUCURSAL
ADD CONSTRAINT FK_PS_ID_PRODUCTO
    FOREIGN KEY (ID_PRODUCTO)
    REFERENCES PRODUCTO(CODIGO_BARRAS)
ENABLE;

ALTER TABLE PRODUCTO_SUCURSAL
ADD CONSTRAINT FK_PS_ID_SUCURSAL
    FOREIGN KEY (ID_SUCURSAL)
    REFERENCES SUCURSAL(ID)
ENABLE;

ALTER TABLE PRODUCTO_SUCURSAL
ADD CONSTRAINT CK_PS_NIVEL_REORDEN
	CHECK (NIVEL_REORDEN >= 0)
ADD CONSTRAINT CK_PS_PRECIO_VENTA
	CHECK (PRECIO_VENTA > 0)
ADD CONSTRAINT CK_PS_PRECIO_UNIDAD_MEDIDA
	CHECK (PRECIO_UNIDAD_MEDIDA > 0)
ENABLE;


-- Creacion de la tabla SUCURSAL_PROVEEDOR y especificacion de sus restricciones
CREATE TABLE SUCURSAL_PROVEEDOR
   (ID_SUCURSAL NUMBER,
    ID_PROVEEDOR VARCHAR2(24 BYTE),
	CONSTRAINT SUCURSAL_PROVEEDOR_PK PRIMARY KEY (ID_SUCURSAL, ID_PROVEEDOR));

ALTER TABLE SUCURSAL_PROVEEDOR
ADD CONSTRAINT FK_SP_ID_SUCURSAL
    FOREIGN KEY (ID_SUCURSAL)
    REFERENCES SUCURSAL(ID)
ENABLE;

ALTER TABLE SUCURSAL_PROVEEDOR
ADD CONSTRAINT FK_SP_ID_PROVEEDOR
    FOREIGN KEY (ID_PROVEEDOR)
    REFERENCES PROVEEDOR(NIT)
ENABLE;


-- Creacion de la tabla PEDIDO y especificacion de sus restricciones
CREATE TABLE PEDIDO
   (NUM_PEDIDO NUMBER,
    ID_PRODUCTO VARCHAR2(24 BYTE),
    ID_PROVEEDOR VARCHAR2(24 BYTE),
    ID_SUCURSAL NUMBER,
    CANTIDAD_PRODUCTO NUMBER NOT NULL,
    PRECIO_TOTAL NUMBER NOT NULL,
    INICIO DATE NOT NULL,
    DIAS_ENTREGA NUMBER NOT NULL,
    ESTADO VARCHAR2(16 BYTE) NOT NULL,
    LLEGADA DATE DEFAULT NULL,
	CONSTRAINT PEDIDO_PK PRIMARY KEY (NUM_PEDIDO, ID_PRODUCTO, ID_PROVEEDOR, ID_SUCURSAL));

ALTER TABLE PEDIDO
ADD CONSTRAINT FK_P_ID_PRODUCTO
    FOREIGN KEY (ID_PRODUCTO)
    REFERENCES PRODUCTO(CODIGO_BARRAS)
ENABLE;

ALTER TABLE PEDIDO
ADD CONSTRAINT FK_P_ID_PROVEEDOR
    FOREIGN KEY (ID_PROVEEDOR)
    REFERENCES PROVEEDOR(NIT)
ENABLE;

ALTER TABLE PEDIDO
ADD CONSTRAINT FK_P_ID_SUCURSAL
    FOREIGN KEY (ID_SUCURSAL)
    REFERENCES SUCURSAL(ID)
ENABLE;

ALTER TABLE PEDIDO
ADD CONSTRAINT CK_P_CANTIDAD_PRODUCTO
	CHECK (CANTIDAD_PRODUCTO > 0)
ADD CONSTRAINT CK_P_PRECIO_TOTAL
	CHECK (PRECIO_TOTAL >= 0)
ADD CONSTRAINT CK_P_DIAS_ENTREGA
	CHECK (DIAS_ENTREGA >= 0)
ADD CONSTRAINT CK_P_ESTADO
    CHECK (ESTADO IN ('en espera', 'entregado'))
ENABLE;

ALTER TABLE PEDIDO
MODIFY ESTADO 
    DEFAULT 'en espera';

-- Creacion de la tabla EMPLEADO y especificacion de sus restricciones
CREATE TABLE EMPLEADO
   (CODIGO_EMPLEADO NUMBER,
    ID_SUCURSAL NUMBER DEFAULT NULL,
	CONSTRAINT EMPLEADO_PK PRIMARY KEY (CODIGO_EMPLEADO));

ALTER TABLE EMPLEADO
ADD CONSTRAINT FK_E_CODIGO_EMPLEADO
    FOREIGN KEY (CODIGO_EMPLEADO)
    REFERENCES USUARIO(CODIGO_USUARIO)
ENABLE;

ALTER TABLE EMPLEADO
ADD CONSTRAINT FK_E_ID_SUCURSAL
    FOREIGN KEY (ID_SUCURSAL)
    REFERENCES SUCURSAL(ID)
ENABLE;

-- Creacion de la tabla CLIENTE y especificacion de sus restricciones
CREATE TABLE CLIENTE
   (CODIGO_CLIENTE NUMBER,
    PUNTOS NUMBER NOT NULL,
    DIRECCION VARCHAR2(64 BYTE) DEFAULT NULL,
    CIUDAD VARCHAR2(64 BYTE) DEFAULT NULL,
	CONSTRAINT CLIENTE_PK PRIMARY KEY (CODIGO_CLIENTE));

ALTER TABLE CLIENTE
ADD CONSTRAINT FK_C_CODIGO_CLIENTE
    FOREIGN KEY (CODIGO_CLIENTE)
    REFERENCES USUARIO(CODIGO_USUARIO)
ENABLE;

ALTER TABLE CLIENTE
MODIFY PUNTOS 
    DEFAULT 0;

-- Creacion de la tabla ALMACEN y especificacion de sus restricciones
CREATE TABLE ALMACEN
   (ID NUMBER,
    CAPACIDAD_VOLUMEN NUMBER NOT NULL,
    CAPACIDAD_PESO NUMBER NOT NULL,
    CATEGORIA VARCHAR2(32 BYTE) NOT NULL,
    TIPO VARCHAR2(32 BYTE) NOT NULL,
    NIV_ABASTECIMIENTO_VOLUMEN NUMBER DEFAULT NULL,
    NIV_ABASTECIMIENTO_PESO NUMBER DEFAULT NULL,
    ID_SUCURSAL NUMBER NOT NULL,
	CONSTRAINT ALMACEN_PK PRIMARY KEY (ID));

ALTER TABLE ALMACEN
ADD CONSTRAINT FK_A_ID_SUCURSAL
    FOREIGN KEY (ID_SUCURSAL)
    REFERENCES SUCURSAL(ID)

ENABLE;

ALTER TABLE ALMACEN
ADD CONSTRAINT CK_A_CAPACIDAD_VOLUMEN
    CHECK (CAPACIDAD_VOLUMEN > 0)
ADD CONSTRAINT CK_A_CAPACIDAD_PESO
    CHECK (CAPACIDAD_PESO > 0)
ADD CONSTRAINT CK_A_CATEGORIA
    CHECK (CATEGORIA IN ('aseo', 'abarrotes', 'congelados', 'prendas de vestir', 'muebles', 'herramientas', 'electrodomésticos'))
ADD CONSTRAINT CK_A_TIPO
    CHECK (TIPO IN ('bodega', 'estante'))
ADD CONSTRAINT CK_A_NIV_ABASTECIMIENTO_VOLUMEN
    CHECK (NIV_ABASTECIMIENTO_VOLUMEN >= 0)
ADD CONSTRAINT CK_A_NIV_ABASTECIMIENTO_PESO
    CHECK (NIV_ABASTECIMIENTO_PESO >= 0)
ENABLE;

-- Creacion de la tabla PRODUCTO_ALMACEN y especificacion de sus restricciones
CREATE TABLE PRODUCTO_ALMACEN
   (ID_PRODUCTO VARCHAR2(24 BYTE),
    ID_ALMACEN NUMBER,
    CANTIDAD NUMBER NOT NULL,
	CONSTRAINT PRODUCTO_ALMACEN_PK PRIMARY KEY (ID_PRODUCTO, ID_ALMACEN));

ALTER TABLE PRODUCTO_ALMACEN
ADD CONSTRAINT FK_PA_ID_PRODUCTO
    FOREIGN KEY (ID_PRODUCTO)
    REFERENCES PRODUCTO(CODIGO_BARRAS)
ENABLE;

ALTER TABLE PRODUCTO_ALMACEN
ADD CONSTRAINT FK_PA_ID_ALMACEN
    FOREIGN KEY (ID_ALMACEN)
    REFERENCES ALMACEN(ID)
ENABLE;

ALTER TABLE PRODUCTO_ALMACEN
ADD CONSTRAINT CK_PA_CANTIDAD
    CHECK (CANTIDAD >= 0)
ENABLE;

ALTER TABLE PRODUCTO_ALMACEN
MODIFY CANTIDAD 
    DEFAULT 0;

-- Creacion de la tabla VENTA_PRODUCTO y especificacion de sus restricciones
CREATE TABLE VENTA_PRODUCTO
   (ID_COMPRA NUMBER,
    ID_CLIENTE NUMBER,
    ID_PRODUCTO VARCHAR2(24 BYTE),
    ID_SUCURSAL NUMBER,
    CANTIDAD NUMBER NOT NULL,
    MONTO NUMBER NOT NULL,
    PUNTOS NUMBER NOT NULL,
    FECHA DATE NOT NULL,
    ID_PROMOCION NUMBER DEFAULT NULL,
	CONSTRAINT VENTA_PRODUCTO_PK PRIMARY KEY (ID_COMPRA, ID_CLIENTE, ID_PRODUCTO, ID_SUCURSAL));

ALTER TABLE VENTA_PRODUCTO
ADD CONSTRAINT FK_VP_ID_CLIENTE
    FOREIGN KEY (ID_CLIENTE)
    REFERENCES CLIENTE(CODIGO_CLIENTE)
ENABLE;

ALTER TABLE VENTA_PRODUCTO
ADD CONSTRAINT FK_VP_ID_PRODUCTO
    FOREIGN KEY (ID_PRODUCTO)
    REFERENCES PRODUCTO_SUCURSAL(ID_PRODUCTO)
ENABLE;

ALTER TABLE VENTA_PRODUCTO
ADD CONSTRAINT FK_VP_ID_SUCURSAL
    FOREIGN KEY (ID_SUCURSAL)
    REFERENCES SUCURSAL(ID)
ENABLE;

ALTER TABLE VENTA_PRODUCTO
ADD CONSTRAINT FK_VP_ID_PROMOCION
    FOREIGN KEY (ID_PROMOCION)
    REFERENCES PROMOCION(ID)
ENABLE;

ALTER TABLE VENTA_PRODUCTO
ADD CONSTRAINT CK_VP_CANTIDAD
    CHECK (CANTIDAD > 0)
ADD CONSTRAINT CK_VP_MONTO
    CHECK (MONTO >= 0)
ADD CONSTRAINT CK_VP_PUNTOS
    CHECK (PUNTOS >= 0)
ENABLE;

ALTER TABLE VENTA_PRODUCTO
MODIFY PUNTOS
    DEFAULT 0;

-- Creacion de la tabla DEF_PROVEEDOR (promocion definida por el proveedor) y especificacion de sus restricciones
CREATE TABLE DEF_PROVEEDOR
   (ID NUMBER,
    PRESENTACION_REMPLAZO VARCHAR2(64 BYTE) NOT NULL,
    PRECIO_REMPLAZO NUMBER NOT NULL,
	CONSTRAINT DEF_PROVEEDOR_PK PRIMARY KEY (ID));

ALTER TABLE DEF_PROVEEDOR
ADD CONSTRAINT FK_DP_ID
    FOREIGN KEY (ID)
    REFERENCES PROMOCION(ID)
ENABLE;

ALTER TABLE DEF_PROVEEDOR
ADD CONSTRAINT CK_DP_PRECIO_REMPLAZO
    CHECK (PRECIO_REMPLAZO > 0)
ENABLE;

-- Creacion de la tabla PAGUE_N_LLEVE_M (el tipo de promocion de pague n y lleve m) y especificacion de sus restricciones
CREATE TABLE PAGUE_N_LLEVE_M
   (ID_PROMOCION NUMBER,
    N NUMBER NOT NULL,
    M NUMBER NOT NULL,
    TIPO VARCHAR2(16 BYTE) NOT NULL,
	CONSTRAINT PAGUE_N_LLEVE_M_PK PRIMARY KEY (ID));

ALTER TABLE PAGUE_N_LLEVE_M
ADD CONSTRAINT FK_PNM_ID
    FOREIGN KEY (ID_PROMOCION)
    REFERENCES PROMOCION(ID)
ENABLE;

ALTER TABLE PAGUE_N_LLEVE_M
ADD CONSTRAINT CK_PNM_N
    CHECK (N > 0)
ADD CONSTRAINT CK_PNM_M
    CHECK (M > 0)
ADD CONSTRAINT CK_PNM_TIPO
    CHECK (TIPO IN ('por unidad', 'por cantidad'))
ENABLE;

-- Creacion de la tabla DESCUENTO (el tipo de promocion con descuento) y especificacion de sus restricciones
CREATE TABLE DESCUENTO
   (ID_PROMOCION NUMBER,
    PORCENTAJE NUMBER NOT NULL,
    TIPO VARCHAR2(16 BYTE) NOT NULL,
	CONSTRAINT DESCUENTO_PK PRIMARY KEY (ID));

ALTER TABLE DESCUENTO
ADD CONSTRAINT FK_D_ID
    FOREIGN KEY (ID_PROMOCION)
    REFERENCES PROMOCION(ID)
ENABLE;

ALTER TABLE DESCUENTO
ADD CONSTRAINT CK_D_PORCENTAJE
    CHECK (PORCENTAJE > 0 AND PORCENTAJE < 100)
ADD CONSTRAINT CK_D_TIPO
    CHECK (TIPO IN ('unico producto', 'segundo producto'))
ENABLE;

-- Creacion de la tabla PAQUETE (el tipo de promocion paquete) y especificacion de sus restricciones
CREATE TABLE PAQUETE
   (ID NUMBER,
    ID_PRODUCTO VARCHAR2(24 BYTE),
	CONSTRAINT PAQUETE_PK PRIMARY KEY (ID, ID_PRODUCTO));

ALTER TABLE PAQUETE
ADD CONSTRAINT FK_PAQ_ID
    FOREIGN KEY (ID)
    REFERENCES PROMOCION(ID)
ENABLE;

ALTER TABLE PAQUETE
ADD CONSTRAINT FK_PAQ_ID_PRODUCTO
    FOREIGN KEY (ID_PRODUCTO)
    REFERENCES PRODUCTO(CODIGO_BARRAS)
ENABLE;

COMMIT;